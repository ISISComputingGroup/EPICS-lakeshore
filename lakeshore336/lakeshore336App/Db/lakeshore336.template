################################################################
#
# Lakeshore 336/350 Temperature Controller template file.
#
# Macros:
#   P - Prefix for PV name
#   PORT - Bus/Port Address (eg. ASYN Port).
#   ADDR - Address on the bus (optional)
#   TEMPSCAN - SCAN rate for the temperature/voltage readings
#   SCAN - SCAN rate for non-temperature/voltage parameters.
#
# Notes: The loop/output dependant PVs are in a seperate template file, included in this one.
#        Generally, set records forward process the associated read records in order
#        to update the read record faster than their SCAN rate otherwise would do (but they
#        are not processed in the same processing chain).
#
# Matt Pearson, June 2013
#
################################################################

record(bo, "$(P):DISABLE") {
  field(DESC, "Disable set records")
  field(PINI, "YES")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(ZNAM, "Set Enabled")
  field(ONAM, "Set Disabled")
  field(ZSV, "NO_ALARM")
  field(OSV, "MAJOR")
}

record(bo, "$(P):DISABLE_POLL") {
  field(DESC, "Disable polling")
  field(PINI, "YES")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(ZNAM, "Poll Enabled")
  field(ONAM, "Poll Disabled")
  field(ZSV, "NO_ALARM")
  field(OSV, "MAJOR")
}

################################################################
# Read records
################################################################

## 
## Read the ID string from the device.
##
record(stringin, "$(P):ID") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(INP, "@ls336.proto getID $(PORT) $(ADDR)")
  field(SCAN, "Passive")
  field(PINI, "YES")
}

## 
## Read the model number from the device.
##
record(stringin, "$(P):MODEL") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(INP, "@ls336.proto getMODEL $(PORT) $(ADDR)")
  field(SCAN, "I/O Intr")
}

################################################################
# Input sensor records
################################################################

record(bo, "$(P):DISABLE_0") {
  field(DESC, "Disable A polling")
  field(PINI, "YES")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(ZNAM, "Enabled")
  field(ONAM, "Disabled")
  field(ZSV, "NO_ALARM")
  field(OSV, "MINOR")
}

record(bo, "$(P):DISABLE_1") {
  field(DESC, "Disable B polling")
  field(PINI, "YES")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(ZNAM, "Enabled")
  field(ONAM, "Disabled")
  field(ZSV, "NO_ALARM")
  field(OSV, "MINOR")
}

record(bo, "$(P):DISABLE_2") {
  field(DESC, "Disable C polling")
  field(PINI, "YES")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(ZNAM, "Enabled")
  field(ONAM, "Disabled")
  field(ZSV, "NO_ALARM")
  field(OSV, "MINOR")
}

record(bo, "$(P):DISABLE_3") {
  field(DESC, "Disable D polling")
  field(PINI, "YES")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(ZNAM, "Enabled")
  field(ONAM, "Disabled")
  field(ZSV, "NO_ALARM")
  field(OSV, "MINOR")
}

substitute "DISABLE=$(P):DISABLE_0"
substitute "INPUT=A"
substitute "INDEX=0"
include "lakeshore_input.template"

substitute "DISABLE=$(P):DISABLE_1"
substitute "INPUT=B"
substitute "INDEX=1"
include "lakeshore_input.template"

substitute "DISABLE=$(P):DISABLE_2"
substitute "INPUT=C"
substitute "INDEX=2"
include "lakeshore_input.template"

substitute "DISABLE=$(P):DISABLE_3"
substitute "INPUT=D"
substitute "INDEX=3"
include "lakeshore_input.template"

################################################################
# Now include the loop dependant records, for outputs 1, 2.
# The common records are in lakeshore336output.template.
################################################################

substitute "INPUTA=$(P):KRDG0"
substitute "INPUTB=$(P):KRDG1"
substitute "INPUTC=$(P):KRDG2"
substitute "INPUTD=$(P):KRDG3"
substitute "TOLERANCE=1"

substitute "OUT=1"
include "lakeshore336output.template"
include "lakeshore336loop.template"

substitute "OUT=2"
include "lakeshore336output.template"
include "lakeshore336loop.template"

